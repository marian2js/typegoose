(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{119:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),b=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=b(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=b(n),u=r,m=d["".concat(a,".").concat(u)]||d[u]||c[u]||i;return n?o.a.createElement(m,s(s({ref:t},l),{},{components:n})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n(2),o=n(6),i=(n(0),n(119)),a={id:"error-warnings-details",title:"Error & Warning Details"},s={unversionedId:"guides/error-warnings-details",id:"guides/error-warnings-details",isDocsHomePage:!1,title:"Error & Warning Details",description:"Errors",source:"@site/../docs/guides/error-warnings-details.md",slug:"/guides/error-warnings-details",permalink:"/typegoose/docs/guides/error-warnings-details",editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/error-warnings-details.md",version:"current",sidebar:"guides",previous:{title:"Deprecation Codes",permalink:"/typegoose/docs/guides/deprecation-codes"},next:{title:"All the Decorators",permalink:"/typegoose/docs/guides/all-decorators"}},p=[{value:"Errors",id:"errors",children:[{value:"Mongoose Version E001",id:"mongoose-version-e001",children:[]},{value:"NodeJS Version E002",id:"nodejs-version-e002",children:[]},{value:"addModelToTypegoose called twice E003",id:"addmodeltotypegoose-called-twice-e003",children:[]},{value:"Self Containg Class E004",id:"self-containg-class-e004",children:[]},{value:"ref is undefined E005",id:"ref-is-undefined-e005",children:[]},{value:"Not All Virtual Populate Elements Provided E006",id:"not-all-virtual-populate-elements-provided-e006",children:[]},{value:"Get &amp; Set Options E007",id:"get--set-options-e007",children:[]},{value:"refPath must be of type String E008",id:"refpath-must-be-of-type-string-e008",children:[]},{value:"Invalid Type E009",id:"invalid-type-e009",children:[]},{value:"Not String Type Error (Enum) E010",id:"not-string-type-error-enum-e010",children:[]},{value:"Not Number Type Error (Enum) E011",id:"not-number-type-error-enum-e011",children:[]},{value:"Invalid Type for Enum E012",id:"invalid-type-for-enum-e012",children:[]},{value:"Invalid WhatIsIt used E013",id:"invalid-whatisit-used-e013",children:[]},{value:"Input was not string or have .typegooseName function/string E014",id:"input-was-not-string-or-have-typegoosename-functionstring-e014",children:[]},{value:"customName must be string and at least one character E015",id:"customname-must-be-string-and-at-least-one-character-e015",children:[]},{value:"Type dosnt have &quot;OptionsConstructor&quot; E016",id:"type-dosnt-have-optionsconstructor-e016",children:[]},{value:"Setting &quot;Mixed&quot; is not allowed E017",id:"setting-mixed-is-not-allowed-e017",children:[]},{value:"dim needs to be 1 or higher E018",id:"dim-needs-to-be-1-or-higher-e018",children:[]},{value:"Assertion Error E019",id:"assertion-error-e019",children:[]},{value:"PropOptions.discriminators dosnt support Arrays with more or less than 1 dimenion E020",id:"propoptionsdiscriminators-dosnt-support-arrays-with-more-or-less-than-1-dimenion-e020",children:[]}]},{value:"PropOptions.ref dosnt support Arrays E021",id:"propoptionsref-dosnt-support-arrays-e021",children:[]},{value:"Warnings",id:"warnings",children:[{value:"Type is not the type for the options provided W001",id:"type-is-not-the-type-for-the-options-provided-w001",children:[]}]}],l={rightToc:p};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"errors"},"Errors"),Object(i.b)("h3",{id:"mongoose-version-e001"},"Mongoose Version ","[E001]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},"Please use mongoose 5.9.14 or higher [E001]")),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Typegoose requires at least mongoose version 5.9.14, because that version changed something that affected typegoose internals"),Object(i.b)("h3",{id:"nodejs-version-e002"},"NodeJS Version ","[E002]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},"You are using a NodeJS Version below 10.15.0, Please Upgrade! [E002]")),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Typegoose requires at least NodeJS Version 10.15, because NodeJS 10 is the lowest activly maintained version AND is the lowest that supports all functions needed by typegoose (without having to add polyfills)"),Object(i.b)("h3",{id:"addmodeltotypegoose-called-twice-e003"},"addModelToTypegoose called twice ","[E003]"),Object(i.b)("p",null,"Error:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-txt"}),'It seems like "addModelToTypegoose" got called twice\nOr multiple classes with the same name are used, which is not supported!\n')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("inlineCode",{parentName:"p"},"addModelToTypegoose")," can only be called once with one name, mongoose dosnt support multiple models with the same name on the same connection / mongoose instance and typegoose has an internal cache where the key is the name (needs to be unique)  "),Object(i.b)("p",null,"-> ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/typegoose/docs/guides/advanced/models-with-same-name"}),"More Information on how to solve it")),Object(i.b)("h3",{id:"self-containg-class-e004"},"Self Containg Class ","[E004]"),Object(i.b)("p",null,"Error:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-txt"}),"It seems like the type used is the same as the target class, which is not supported\nPlease look at https://github.com/typegoose/typegoose/issues/42 for more information [E004]\n")),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Because of limitations of JS, it is not possible to use an self-containing-class",Object(i.b)("br",{parentName:"p"}),"\n","-> But Self-Referencing still works"),Object(i.b)("h3",{id:"ref-is-undefined-e005"},"ref is undefined ","[E005]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'Option "ref" for "${name}.${key}" is null/undefined! [E005]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Either:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The Option ",Object(i.b)("inlineCode",{parentName:"li"},"ref")," was defined with an function, but that function returned ",Object(i.b)("inlineCode",{parentName:"li"},"undefined / null")),Object(i.b)("li",{parentName:"ul"},"The Option ",Object(i.b)("inlineCode",{parentName:"li"},"ref")," was defined with ",Object(i.b)("inlineCode",{parentName:"li"},"undefined / null")," (",Object(i.b)("inlineCode",{parentName:"li"},"{ ref: undefined }"),") (",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/typegoose/docs/guides/advanced/reference-other-classes#common-problems"}),"Can Be Solved with this guide"),")")),Object(i.b)("p",null,"Example of when this gets triggerd:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"class ErrorClass {\n  @prop({ ref: () => undefined }) // <- error here\n  public someProp?: Ref<ErrorClass>;\n\n  @prop({ ref: undefined }) // <- error here\n  public someProp?: Ref<ErrorClass>;\n}\n")),Object(i.b)("h3",{id:"not-all-virtual-populate-elements-provided-e006"},"Not All Virtual Populate Elements Provided ","[E006]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},"${name}.${key}\" has not all needed Virtual Populate Options! Needed are: ${allVirtualoptions.join(', ')} [E006]")),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Not all required Virtual-Populate options were provided, required are: ",Object(i.b)("inlineCode",{parentName:"p"},"localField, foreignField, ref")),Object(i.b)("h3",{id:"get--set-options-e007"},"Get & Set Options ","[E007]"),Object(i.b)("p",null,"Error:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"${name}.${key}" does not have a set function! [E007]')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"${name}.${key}" does not have a get function! [E007]'))),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","When using the ",Object(i.b)("inlineCode",{parentName:"p"},"get & set")," options, both are required to be specified at the same time"),Object(i.b)("h3",{id:"refpath-must-be-of-type-string-e008"},"refPath must be of type String ","[E008]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'"refPath" for "${name}, ${key}" should be of type String! [E008]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The Option ",Object(i.b)("inlineCode",{parentName:"p"},"refPath")," needs to be defined as an string (mongoose limitation, typegoose check)"),Object(i.b)("h3",{id:"invalid-type-e009"},"Invalid Type ","[E009]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'"${targetName}.${key}"\'s Type is invalid! Type is: "${Type}" [E009]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The ",Object(i.b)("inlineCode",{parentName:"p"},"Type")," in its final state (after checking ",Object(i.b)("inlineCode",{parentName:"p"},"rawOptions.type")," and executing the deferring-function) is either ",Object(i.b)("inlineCode",{parentName:"p"},"undefined / null")," or not being an function"),Object(i.b)("p",null,"Example of when this gets triggered:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"class ErrorClass {\n  @prop({ type: () => undefined }) // <- error here\n  public someProp?: string;\n\n  @prop({ type: 'Hello' }) // <- error here\n  public someProp?: string;\n}\n")),Object(i.b)("h3",{id:"not-string-type-error-enum-e010"},"Not String Type Error (Enum) ","[E010]"),Object(i.b)("p",null,"Error:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-txt"}),'Typeof "${targetName}.${key}" is "String", used enum is not only Strings! [E010]\n  Encountered with property in Enum: ${enumKey}.${typeof enumValue}\n')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","This Error should never be thrown if Typescript is used, it throws if the ",Object(i.b)("inlineCode",{parentName:"p"},"Type")," is ",Object(i.b)("inlineCode",{parentName:"p"},"String")," and an ",Object(i.b)("inlineCode",{parentName:"p"},"enum"),"(option) is provided, but the enum is not ",Object(i.b)("em",{parentName:"p"},"only consisting")," of strings"),Object(i.b)("h3",{id:"not-number-type-error-enum-e011"},"Not Number Type Error (Enum) ","[E011]"),Object(i.b)("p",null,"Error:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-txt"}),'Typeof "${targetName}.${key}" is "Number", value is undefined/null or does not have a reverse mapping! [E011]\n  Encountered with property: ${enumKey}.${typeof enumValue}\n')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","This Error should never be thrown if Typescript is used, it throws if the ",Object(i.b)("inlineCode",{parentName:"p"},"Type")," is ",Object(i.b)("inlineCode",{parentName:"p"},"Number")," and an ",Object(i.b)("inlineCode",{parentName:"p"},"enum"),"(option) is provided, but the enum is not ",Object(i.b)("em",{parentName:"p"},"only consisting")," of numbers (checked by the reverse mapping)"),Object(i.b)("h3",{id:"invalid-type-for-enum-e012"},"Invalid Type for Enum ","[E012]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'Invalid type used for enums!, got: "${Type}" (${name}.${key}) [E012]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","This Error should never be thrown if Typescript is used, it throws if the ",Object(i.b)("inlineCode",{parentName:"p"},"Type")," is not ",Object(i.b)("inlineCode",{parentName:"p"},"String")," or ",Object(i.b)("inlineCode",{parentName:"p"},"Number")),Object(i.b)("h3",{id:"invalid-whatisit-used-e013"},"Invalid WhatIsIt used ","[E013]"),Object(i.b)("p",null,"Error:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"${propKind}"(whatis(subSchema)) is invalid for "${name}.${key}" [E013]')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"whatis" is not supplied OR doesn\\\'t have a case yet! [E013]'))),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","An Value not specified by the enum ",Object(i.b)("inlineCode",{parentName:"p"},"WhatIsIt")," was provided (no case matched)"),Object(i.b)("h3",{id:"input-was-not-string-or-have-typegoosename-functionstring-e014"},"Input was not string or have .typegooseName function/string ","[E014]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},"Input was not a string AND didnt have a .typegooseName function AND didnt have a .typegooseName string [E014]")),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The Provided Input wasnt an string and didnt have an ",Object(i.b)("inlineCode",{parentName:"p"},".typegooseName")," function / string to be searched by"),Object(i.b)("h3",{id:"customname-must-be-string-and-at-least-one-character-e015"},"customName must be string and at least one character ","[E015]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'"customName" must be a string AND at least one character ("${baseName}") [E015]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The ",Object(i.b)("inlineCode",{parentName:"p"},"customName")," option must be an String AND at least ",Object(i.b)("em",{parentName:"p"},"one")," character long"),Object(i.b)("h3",{id:"type-dosnt-have-optionsconstructor-e016"},'Type dosnt have "OptionsConstructor" ',"[E016]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'Type does not have an valid "OptionsConstructor"! (${getName(loggerType)} on ${getName(target)}.${pkey}) [E016]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The ",Object(i.b)("inlineCode",{parentName:"p"},"Type")," provided does not have an property ",Object(i.b)("inlineCode",{parentName:"p"},"OptionsConstructor")," (",Object(i.b)("inlineCode",{parentName:"p"},"undefined / null"),"), this is required to map options of an array & map"),Object(i.b)("h3",{id:"setting-mixed-is-not-allowed-e017"},'Setting "Mixed" is not allowed ',"[E017]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'Setting "Mixed" is not allowed! (${name}, ${key}) [E017]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The option to change Severity is set to ",Object(i.b)("inlineCode",{parentName:"p"},"Severity.ERROR"),Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/typegoose/docs/api/decorators/model-options#allowmixed"}),"More Information")),Object(i.b)("h3",{id:"dim-needs-to-be-1-or-higher-e018"},"dim needs to be 1 or higher ","[E018]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'"dim" needs to be higher than 0 (${name}.${key}) [E018]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The Option ",Object(i.b)("inlineCode",{parentName:"p"},"dim")," must be at least 1 or higher, because an array with 0 (or less) dimensions is not possible"),Object(i.b)("h3",{id:"assertion-error-e019"},"Assertion Error ","[E019]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},"Assert failed - no custom error [E019]")),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","This Error should never show up, if it does report it"),Object(i.b)("h3",{id:"propoptionsdiscriminators-dosnt-support-arrays-with-more-or-less-than-1-dimenion-e020"},"PropOptions.discriminators dosnt support Arrays with more or less than 1 dimenion ","[E020]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'"PropOptions.discriminators" dosnt support Arrays higher and lower than 1 (got "${gotType.dim}" dimensions at "${name}.${key}") [E020]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Somewhere the option ",Object(i.b)("inlineCode",{parentName:"p"},"discriminators")," was defined with an array which had more or less than 1 dimension"),Object(i.b)("p",null,"Example of when this gets triggered:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"class ErrorClass {\n  @prop({ discriminators: () => [[ErrorClass]] }) // <- error here\n  public someProp?: ErrorClass; // (this is just an example)\n\n  @prop({ discriminators: () => ErrorClass }) // <- error here\n  public someProp?: ErrorClass; // (this is just an example)\n}\n")),Object(i.b)("h2",{id:"propoptionsref-dosnt-support-arrays-e021"},"PropOptions.ref dosnt support Arrays ","[E021]"),Object(i.b)("p",null,"Error: ",Object(i.b)("inlineCode",{parentName:"p"},'"PropOptions.ref" dosnt support Arrays (got "${gotType.dim}" dimensions at "${name}.${key}") [E021]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","Somewhere the option ",Object(i.b)("inlineCode",{parentName:"p"},"ref")," was defined with an array, which is not supported"),Object(i.b)("p",null,"Example of when this gets triggered:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"class ErrorClass {\n  @prop({ ref: () => [ErrorClass] }) // <- error here\n  public someProp?: Ref<ErrorClass>;\n}\n")),Object(i.b)("h2",{id:"warnings"},"Warnings"),Object(i.b)("h3",{id:"type-is-not-the-type-for-the-options-provided-w001"},"Type is not the type for the options provided ","[W001]"),Object(i.b)("p",null,"Warning: ",Object(i.b)("inlineCode",{parentName:"p"},'Type of "${name}.${key}" is not ${type}, but includes the following ${extra} options [W001]')),Object(i.b)("p",null,"Details:",Object(i.b)("br",{parentName:"p"}),"\n","The provided options (listed in the warning) do nothing with the provided ",Object(i.b)("inlineCode",{parentName:"p"},"Type")))}b.isMDXComponent=!0}}]);